#+TITLE: MPD config
#+AUTHOR: Kuhy
#+PROPERTY: header-args+ :comments yes
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :tangle "~/.config/mpd/mpd.conf"
#+PROPERTY: header-args+ :noweb tangle
#+OPTIONS: prop:t

#+INCLUDE: "../variables.org"

* Files and directories
This setting controls the top directory which MPD will search to discover the
available audio files and add them to the daemon's online database. This
setting defaults to the XDG directory, otherwise the music directory will be
be disabled and audio files will only be accepted over ipc socket (using
=file://= protocol) or streaming files over an accepted protocol.
#+BEGIN_SRC conf
music_directory "~/Music"
#+END_SRC
This setting sets the MPD internal playlist directory. The purpose of this
directory is storage for playlists created by MPD. The server will use
playlist files not created by the server but only if they are in the MPD
format. This setting defaults to playlist saving being disabled.
#+BEGIN_SRC conf
playlist_directory "~/Music/playlists"
#+END_SRC
This setting sets the location of the MPD database. This file is used to
load the database at server start up and store the database while the
server is not up. This setting defaults to disabled which will allow
MPD to accept files over ipc socket (using file:// protocol) or streaming
files over an accepted protocol.
#+BEGIN_SRC conf
db_file "~/.config/mpd/database"
#+END_SRC
These settings are the locations for the daemon log files for the daemon.
These logs are great for troubleshooting, depending on your =log_level=
settings.

The special value "syslog" makes MPD use the local syslog daemon. This
setting defaults to logging to syslog.
#+BEGIN_SRC conf
#log_file			"~/.mpd/log"
#+END_SRC
This setting sets the location of the file which stores the process ID
for use of mpd --kill and some init scripts. This setting is disabled by
default and the pid file will not be stored.
#+BEGIN_SRC conf
pid_file "~/.config/mpd/pid"
#+END_SRC
This setting sets the location of the file which contains information about
most variables to get MPD back into the same general shape it was in before
it was brought down. This setting is disabled by default and the server
state will be reset on server start up.
#+BEGIN_SRC conf
#state_file			"~/.mpd/state"
#+END_SRC
The location of the sticker database.  This is a database which
manages dynamic information attached to songs.
#+BEGIN_SRC conf
#sticker_file			"~/.mpd/sticker.sql"
#+END_SRC
* General music daemon options
This setting specifies the user that MPD will run as. MPD should never run as
root and you may use this setting to make MPD change its user ID after
initialization. This setting is disabled by default and MPD is run as the
current user.
#+BEGIN_SRC conf
#user				"nobody"
#+END_SRC
This setting specifies the group that MPD will run as. If not specified
primary group of user specified with "user" setting will be used (if set).
This is useful if MPD needs to be a member of group such as "audio" to
have permission to use sound card.
#+BEGIN_SRC conf
#group				"nogroup"
#+END_SRC
This setting sets the address for the daemon to listen on. Careful attention
should be paid if this is assigned to anything other then the default, any.
This setting can deny access to control of the daemon. Not effective if
systemd socket activiation is in use.
For network
#+BEGIN_SRC conf
#bind_to_address		"any"
#+END_SRC
And for Unix Socket
#+BEGIN_SRC conf
#bind_to_address		"~/.mpd/socket"
#+END_SRC
This setting is the TCP port that is desired for the daemon to get assigned
to.
#+BEGIN_SRC conf
port "6600"
#+END_SRC
This setting controls the type of information which is logged. Available
setting arguments are "default", "secure" or "verbose". The "verbose" setting
argument is recommended for troubleshooting, though can quickly stretch
available resources on limited hardware storage.
#+BEGIN_SRC conf
#log_level			"default"
#+END_SRC
Setting "restore_paused" to "yes" puts MPD into pause mode instead
of starting playback after startup.
#+BEGIN_SRC conf
#restore_paused "no"
#+END_SRC
This setting enables MPD to create playlists in a format usable by other
music players.
#+BEGIN_SRC conf
#save_absolute_paths_in_playlists	"no"
#+END_SRC
This setting defines a list of tag types that will be extracted during the
audio file discovery process. The complete list of possible values can be
found in the user manual.
#+BEGIN_SRC conf
#metadata_to_use	"artist,album,title,track,name,genre,date,composer,performer,disc"
#+END_SRC
This example just enables the "comment" tag without disabling all
the other supported tags:
#+BEGIN_SRC conf
#metadata_to_use "+comment"
#+END_SRC
This setting enables automatic update of MPD's database when files in
music_directory are changed.
#+BEGIN_SRC conf
#auto_update	"yes"
#+END_SRC
Limit the depth of the directories being watched, 0 means only watch
the music directory itself.  There is no limit by default.
#+BEGIN_SRC conf
#auto_update_depth "3"
#+END_SRC
* Symbolic link behavior
If this setting is set to "yes", MPD will discover audio files by following
symbolic links outside of the configured music_directory.
#+BEGIN_SRC conf
#follow_outside_symlinks	"yes"
#+END_SRC
If this setting is set to "yes", MPD will discover audio files by following
symbolic links inside of the configured music_directory.
#+BEGIN_SRC conf
#follow_inside_symlinks		"yes"
#+END_SRC
* Zeroconf / Avahi Service Discovery
If this setting is set to "yes", service information will be published with
Zeroconf / Avahi.
#+BEGIN_SRC conf
#zeroconf_enabled		"yes"
#+END_SRC
The argument to this setting will be the Zeroconf / Avahi unique name for
this MPD server on the network. %h will be replaced with the hostname.
#+BEGIN_SRC conf
#zeroconf_name			"Music Player @ %h"
#+END_SRC
* Permissions
If this setting is set, MPD will require password authorization. The password
setting can be specified multiple times for different password profiles.
#+BEGIN_SRC conf
#password                        "password@read,add,control,admin"
#+END_SRC
This setting specifies the permissions a user has who has not yet logged in.
#+BEGIN_SRC conf
#default_permissions             "read,add,control,admin"
#+END_SRC
* Database
#+BEGIN_SRC conf
#database {
#       plugin "proxy"
#       host "other.mpd.host"
#       port "6600"
#}
#+END_SRC
* Input
#+BEGIN_SRC conf
input {
        plugin "curl"
#       proxy "proxy.isp.com:8080"
#       proxy_user "user"
#       proxy_password "password"
}
#+END_SRC
* Audio Output
MPD supports various audio output types, as well as playing through multiple
audio outputs at the same time, through multiple =audio_output= settings
blocks. Setting this block is optional, though the server will only attempt
autodetection for one sound card.

Users of PulseAudio will need to make the following modification:
#+BEGIN_SRC conf
audio_output {
    type "pulse"
    name "pulse audio"
}
#+END_SRC
In order to make music visualizer work you'll need to use mpd fifo
output, whose format parameter has to be set to 44100:16:1 for mono
visualization or 44100:16:2 for stereo visualization. Example configuration
#+BEGIN_SRC conf
audio_output {
    type                    "fifo"
    name                    "visualizer_fifo"
    path                    "/tmp/mpd.fifo"
    format                  "44100:16:2"
}
#+END_SRC
Expose MPD, so it can be used by Android phone remotely:
#+BEGIN_SRC conf
audio_output {
    type        "httpd"
    name        "My HTTP Stream"
    encoder     "vorbis"        # optional, vorbis or lame
    port        "8000"
    quality     "5.0"           # do not define if bitrate is defined
    bitrate     "128"           # do not define if quality is defined
    format      "44100:16:1"
    max_clients "0"             # optional 0=no limit
}
#+END_SRC
We need to expose 6600 port which is used by MPD by default
and 8000 port which is used by =audio_output=.
* Normalization automatic volume adjustments
This setting specifies the type of ReplayGain to use. This setting can have
the argument "off", "album", "track" or "auto". "auto" is a special mode that
chooses between "track" and "album" depending on the current state of
random playback. If random playback is enabled then "track" mode is used.
See <http://www.replaygain.org> for more details about ReplayGain.
This setting is off by default.
#+BEGIN_SRC conf
#replaygain			"album"
#+END_SRC
This setting sets the pre-amp used for files that have ReplayGain tags. By
default this setting is disabled.
#+BEGIN_SRC conf
#replaygain_preamp		"0"
#+END_SRC
This setting sets the pre-amp used for files that do NOT have ReplayGain tags.
By default this setting is disabled.
#+BEGIN_SRC conf
#replaygain_missing_preamp	"0"
#+END_SRC
This setting enables or disables ReplayGain limiting.
MPD calculates actual amplification based on the ReplayGain tags
and replaygain_preamp / replaygain_missing_preamp setting.
If replaygain_limit is enabled MPD will never amplify audio signal
above its original level. If replaygain_limit is disabled such amplification
might occur. By default this setting is enabled.
#+BEGIN_SRC conf
#replaygain_limit		"yes"
#+END_SRC
This setting enables on-the-fly normalization volume adjustment. This will
result in the volume of all playing audio to be adjusted so the output has
equal "loudness". This setting is disabled by default.
#+BEGIN_SRC conf
#volume_normalization		"no"
#+END_SRC
* Character Encoding
If file or directory names do not display correctly for your locale then you
may need to modify this setting.
#+BEGIN_SRC conf
#filesystem_charset		"UTF-8"
#+END_SRC
